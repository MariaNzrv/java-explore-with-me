CREATE TABlE IF NOT EXISTS users
(
    id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(250) NOT NULL,
    email VARCHAR(254)  NOT NULL,
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABlE IF NOT EXISTS category
(
    id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(50) NOT NULL,
    CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABlE IF NOT EXISTS compilation
(
    id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title  VARCHAR(100) NOT NULL,
    pinned BOOLEAN DEFAULT FALSE,
    CONSTRAINT UQ_COMPILATION_TITLE UNIQUE (title)
);

CREATE TABlE IF NOT EXISTS location
(
    id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat  REAL NOT NULL,
    lon REAL NOT NULL,
    CONSTRAINT UQ_LOCATION UNIQUE (lat, lon)
);

CREATE TABlE IF NOT EXISTS event
(
    id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation  VARCHAR(2000) NOT NULL,
    description VARCHAR(7000) NOT NULL,
    event_date TIMESTAMP,
    category_id INTEGER REFERENCES category (id),
    location_id INTEGER REFERENCES location (id) ON DELETE CASCADE,
    paid BOOLEAN DEFAULT FALSE,
    participant_limit INTEGER DEFAULT 0,
    request_moderation BOOLEAN DEFAULT TRUE,
    title VARCHAR(120) NOT NULL,
    created      TIMESTAMP,
    initiator_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    published_on TIMESTAMP,
    state VARCHAR(50)
);

CREATE TABlE IF NOT EXISTS requests
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status   VARCHAR(50),
    requester_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    event_id INTEGER REFERENCES event (id) ON DELETE CASCADE,
    created      TIMESTAMP
);

CREATE TABlE IF NOT EXISTS compilation_event (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id INTEGER REFERENCES event (id) ON DELETE CASCADE,
    compilation_id INTEGER REFERENCES compilation (id) ON DELETE CASCADE
);

CREATE TABlE IF NOT EXISTS comments
(
    id        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text      VARCHAR(4000) NOT NULL,
    author_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    event_id   INTEGER REFERENCES event (id) ON DELETE CASCADE,
    created   TIMESTAMP,
    last_upd   TIMESTAMP
);